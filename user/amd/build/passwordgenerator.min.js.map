{"version":3,"sources":["../src/passwordgenerator.js"],"names":["init","generatePassword","alphabet","lowerCaseChars","upperCaseChars","specialChars","isPutLowerCaseChar","isPutUpperCaseChar","isPutSpecialChar","getRandomInt","min","max","Math","ceil","floor","random","getRandomStringChar","string","length","getRandomAlphabetChar","randomSelector","result","i","push","join","generatePasswordButton","document","getElementById","onclick","wrapper","input","displayvalue","password","value","data","text","passwordMasked","html"],"mappings":"qJAuBA,uD,OAEoB,QAAPA,CAAAA,IAAO,EAAM,CAEtB,QAASC,CAAAA,CAAT,EAA4B,IAEpBC,CAAAA,CAAQ,CAAG,CACXC,cAAc,CAAE,4BADL,CAEXC,cAAc,CAAE,4BAFL,CAGXC,YAAY,CAAE,8BAHH,CAFS,CAOpBC,CAAkB,GAPE,CAQpBC,CAAkB,GARE,CASpBC,CAAgB,GATI,CAWxB,QAASC,CAAAA,CAAT,CAAsBC,CAAtB,CAA2BC,CAA3B,CAAgC,CAE5BD,CAAG,CAAGE,IAAI,CAACC,IAAL,CAAUH,CAAV,CAAN,CACAC,CAAG,CAAGC,IAAI,CAACE,KAAL,CAAWH,CAAX,CAAN,CACA,MAAOC,CAAAA,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,IAAiBJ,CAAG,CAAGD,CAAN,CAAY,CAA7B,CAAX,EAA8CA,CACxD,CAED,QAASM,CAAAA,CAAT,CAA6BC,CAA7B,CAAqC,CACjC,MAAOA,CAAAA,CAAM,CAACR,CAAY,CAAC,CAAD,CAAIQ,CAAM,CAACC,MAAP,CAAgB,CAApB,CAAb,CAChB,CAED,QAASC,CAAAA,CAAT,EAAiC,CAC7B,GAAIC,CAAAA,CAAc,CAAGX,CAAY,CAAC,CAAD,CAAI,CAAJ,CAAjC,CACA,OAAQW,CAAR,EACI,IAAK,EAAL,CAAQ,CACJd,CAAkB,GAAlB,CACA,MAAOU,CAAAA,CAAmB,CAACd,CAAQ,CAACC,cAAV,CAC7B,CACD,IAAK,EAAL,CAAQ,CACJI,CAAkB,GAAlB,CACA,MAAOS,CAAAA,CAAmB,CAACd,CAAQ,CAACE,cAAV,CAC7B,CACD,IAAK,EAAL,CAAQ,CACJI,CAAgB,GAAhB,CACA,MAAOQ,CAAAA,CAAmB,CAACd,CAAQ,CAACG,YAAV,CAC7B,CACD,IAAK,EAAL,CAAQ,CACJ,MAAOI,CAAAA,CAAY,CAAC,CAAD,CAAI,CAAJ,CACtB,CAfL,CAiBH,CAID,OAFIS,CAAAA,CAAM,CAAGT,CAAY,CAAC,CAAD,CAAI,EAAJ,CAEzB,CADIY,CAAM,CAAG,EACb,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,CAApB,CAA4BI,CAAC,EAA7B,CAAiC,CAC7BD,CAAM,CAACE,IAAP,CAAYJ,CAAqB,EAAjC,CACH,CACD,GAAI,CAACb,CAAL,CAAyB,CACrBe,CAAM,CAACZ,CAAY,CAAC,CAAD,CAAIY,CAAM,CAACH,MAAP,CAAgB,CAApB,CAAb,CAAN,CAA6CF,CAAmB,CAACd,CAAQ,CAACC,cAAV,CACnE,CACD,GAAI,CAACI,CAAL,CAAyB,CACrBc,CAAM,CAACZ,CAAY,CAAC,CAAD,CAAIY,CAAM,CAACH,MAAP,CAAgB,CAApB,CAAb,CAAN,CAA6CF,CAAmB,CAACd,CAAQ,CAACE,cAAV,CACnE,CACD,GAAI,CAACI,CAAL,CAAuB,CACnBa,CAAM,CAACZ,CAAY,CAAC,CAAD,CAAIY,CAAM,CAACH,MAAP,CAAgB,CAApB,CAAb,CAAN,CAA6CF,CAAmB,CAACd,CAAQ,CAACG,YAAV,CACnE,CACD,MAAOgB,CAAAA,CAAM,CAACG,IAAP,CAAY,EAAZ,CACV,CAED,GAAIC,CAAAA,CAAsB,CAAGC,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,CAA7B,CAEAF,CAAsB,CAACG,OAAvB,CAAiC,UAAW,IACpCC,CAAAA,CAAO,CAAG,cAAE,uCAAF,CAD0B,CAEpCC,CAAK,CAAGJ,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAF4B,CAGpCI,CAAY,CAAG,cAAE,4CAAF,CAHqB,CAIpCC,CAAQ,CAAG/B,CAAgB,EAJS,CAKxC6B,CAAK,CAACG,KAAN,CAAcD,CAAd,CACA,GAAIH,CAAO,CAACK,IAAR,CAAa,UAAb,CAAJ,CAA8B,CAC1BH,CAAY,CAACI,IAAb,CAAkBH,CAAlB,CACH,CAFD,IAEO,CAEH,OADII,CAAAA,CAAc,CAAG,EACrB,CAASd,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGU,CAAQ,CAACd,MAA7B,CAAqCI,CAAC,EAAtC,CAA0C,CACtCc,CAAc,EAAI,QACrB,CACD,GAAIC,CAAAA,CAAI,CAAG,SAAWD,CAAX,CAA4B,SAAvC,CACAL,CAAY,CAACM,IAAb,CAAkBA,CAAlB,CACH,CACJ,CACJ,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Password generation procedure for user edit form (user/editadvanced.php)\n *\n * @module     core_user/passwordgenerator\n * @package    core_user\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\n\nexport const init = () => {\n\n    function generatePassword() {\n\n        var alphabet = {\n            lowerCaseChars: 'abcdefghijklmnopqrstuvwxyz',\n            upperCaseChars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n            specialChars: '!#$%&()*+,-./:;<=>?@[]^_{|}~'\n        };\n        var isPutLowerCaseChar = false;\n        var isPutUpperCaseChar = false;\n        var isPutSpecialChar = false;\n\n        function getRandomInt(min, max) {\n            // generates random int value in interval from min to max inclusive\n            min = Math.ceil(min);\n            max = Math.floor(max);\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n\n        function getRandomStringChar(string) {\n            return string[getRandomInt(0, string.length - 1)];\n        }\n\n        function getRandomAlphabetChar() {\n            var randomSelector = getRandomInt(0, 3);\n            switch (randomSelector) {\n                case 0: {\n                    isPutLowerCaseChar = true;\n                    return getRandomStringChar(alphabet.lowerCaseChars);\n                }\n                case 1: {\n                    isPutUpperCaseChar = true;\n                    return getRandomStringChar(alphabet.upperCaseChars);\n                }\n                case 2: {\n                    isPutSpecialChar = true;\n                    return getRandomStringChar(alphabet.specialChars);\n                }\n                case 3: {\n                    return getRandomInt(0, 9);\n                }\n            }\n        }\n\n        let length = getRandomInt(8, 16);\n        let result = [];\n        for (let i = 0; i < length; i++) {\n            result.push(getRandomAlphabetChar());\n        }\n        if (!isPutLowerCaseChar) {\n            result[getRandomInt(0, result.length - 1)] = getRandomStringChar(alphabet.lowerCaseChars);\n        }\n        if (!isPutUpperCaseChar) {\n            result[getRandomInt(0, result.length - 1)] = getRandomStringChar(alphabet.upperCaseChars);\n        }\n        if (!isPutSpecialChar) {\n            result[getRandomInt(0, result.length - 1)] = getRandomStringChar(alphabet.specialChars);\n        }\n        return result.join('');\n    }\n\n    let generatePasswordButton = document.getElementById('id_generatepasswordbutton');\n\n    generatePasswordButton.onclick = function() {\n        let wrapper = $('span[data-passwordunmask=\"wrapper\"]');\n        let input = document.getElementById('id_newpassword');\n        let displayvalue = $('span[data-passwordunmask=\"displayvalue\"]');\n        let password = generatePassword();\n        input.value = password;\n        if (wrapper.data('unmasked')) {\n            displayvalue.text(password);\n        } else {\n            let passwordMasked = '';\n            for (let i = 0; i < password.length; i++) {\n                passwordMasked += '&bull;';\n            }\n            let html = '<span>' + passwordMasked + '</span>';\n            displayvalue.html(html);\n        }\n    };\n};\n"],"file":"passwordgenerator.min.js"}